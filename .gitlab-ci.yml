stages:
- build
- install
- deploy

build:
  stage: build
  image: ubuntu:16.04
  script:
  - apt-get update
  - apt-get install -y virtualenv python-pip git
  - virtualenv env
  - env/bin/pip install --upgrade pip
  - env/bin/python setup.py sdist
  artifacts:
    paths:
    - dist/

check-codestyle:
  stage: build
  image: ubuntu:18.04
  script:
  - apt-get update
  - apt-get install -y virtualenv python-pip git
  - virtualenv env
  - env/bin/pip install --upgrade pip
  - env/bin/pip install flake8-docstrings
  # Check against PEP8 and PEP257
  # Ignore line length check (E501)
  # Ignore single-line docstring check (D200)
  - env/bin/python -m flake8 --ignore E501,D200 gr/pygr/mlab.py

install-ubuntu1604-python2:
  stage: install
  image: ubuntu:16.04
  variables:
    GIT_STRATEGY: none
  script:
  - apt-get update
  - apt-get install -y virtualenv python-pip git libxt6 libxrender1 libgl1-mesa-glx
  - virtualenv env
  - env/bin/pip install --upgrade pip
  - env/bin/pip install dist/gr-*.tar.gz
  - GKS_WSTYPE=png env/bin/python -c 'import gr; gr.polyline([0, 1], [0, 1]); gr.updatews()'
  - env/bin/python -c 'import gr3'
  artifacts:
    paths:
    - gks.png

install-ubuntu1604-python3:
  stage: install
  image: ubuntu:16.04
  variables:
    GIT_STRATEGY: none
  script:
  - apt-get update
  - apt-get install -y python3-venv python3-pip git libxt6 libxrender1 libgl1-mesa-glx
  - python3 -m venv env
  - env/bin/pip install --upgrade pip
  - env/bin/pip install dist/gr-*.tar.gz
  - GKS_WSTYPE=png env/bin/python -c 'import gr; gr.polyline([0, 1], [0, 1]); gr.updatews()'
  - env/bin/python -c 'import gr3'
  artifacts:
    paths:
    - gks.png

install-ubuntu1804-python2:
  stage: install
  image: ubuntu:18.04
  variables:
    GIT_STRATEGY: none
  script:
  - apt-get update
  - apt-get install -y virtualenv python-pip git libxt6 libxrender1 libgl1-mesa-glx
  - virtualenv env
  - env/bin/pip install --upgrade pip
  - env/bin/pip install dist/gr-*.tar.gz
  - GKS_WSTYPE=png env/bin/python -c 'import gr; gr.polyline([0, 1], [0, 1]); gr.updatews()'
  - env/bin/python -c 'import gr3'
  artifacts:
    paths:
    - gks.png

install-ubuntu1804-python3:
  stage: install
  image: ubuntu:18.04
  variables:
    GIT_STRATEGY: none
  script:
  - apt-get update
  - apt-get install -y python3-venv python3-pip git libxt6 libxrender1 libgl1-mesa-glx
  - python3 -m venv env
  - env/bin/pip install --upgrade pip
  - env/bin/pip install dist/gr-*.tar.gz
  - GKS_WSTYPE=png env/bin/python -c 'import gr; gr.polyline([0, 1], [0, 1]); gr.updatews()'
  - env/bin/python -c 'import gr3'
  artifacts:
    paths:
    - gks.png

install-debian9-python2:
  stage: install
  image: debian:9
  variables:
    GIT_STRATEGY: none
  script:
  - apt-get update
  - apt-get install -y virtualenv python-pip git libxt6 libxrender1 libgl1-mesa-glx
  - virtualenv env
  - env/bin/pip install --upgrade pip
  - env/bin/pip install dist/gr-*.tar.gz
  - GKS_WSTYPE=png env/bin/python -c 'import gr; gr.polyline([0, 1], [0, 1]); gr.updatews()'
  - env/bin/python -c 'import gr3'
  artifacts:
    paths:
    - gks.png

install-debian9-python3:
  stage: install
  image: debian:9
  variables:
    GIT_STRATEGY: none
  script:
  - apt-get update
  - apt-get install -y python3-venv python3-pip git libxt6 libxrender1 libgl1-mesa-glx
  - python3 -m venv env
  - env/bin/pip install --upgrade pip
  - env/bin/pip install dist/gr-*.tar.gz
  - GKS_WSTYPE=png env/bin/python -c 'import gr; gr.polyline([0, 1], [0, 1]); gr.updatews()'
  - env/bin/python -c 'import gr3'
  artifacts:
    paths:
    - gks.png

install-centos7-python2:
  stage: install
  image: centos:7
  variables:
    GIT_STRATEGY: none
  script:
  - yum install -y libXt libXrender libXext python mesa-libGL
  - curl -LO https://bootstrap.pypa.io/get-pip.py
  - python get-pip.py
  - pip install --upgrade pip
  - pip install dist/gr-*.tar.gz
  - GKS_WSTYPE=png python -c 'import gr; gr.polyline([0, 1], [0, 1]); gr.updatews()'
  - python -c 'import gr3'
  artifacts:
    paths:
    - gks.png

install-fedora26-python2:
  stage: install
  image: fedora:26
  variables:
    GIT_STRATEGY: none
  script:
  - dnf install -y libXt libXrender libXext python-pip mesa-libGL
  - pip install --upgrade pip
  - pip install dist/gr-*.tar.gz
  - GKS_WSTYPE=png python -c 'import gr; gr.polyline([0, 1], [0, 1]); gr.updatews()'
  - python -c 'import gr3'
  artifacts:
    paths:
    - gks.png

install-fedora26-python3:
  stage: install
  image: fedora:26
  variables:
    GIT_STRATEGY: none
  script:
  - dnf install -y libXt libXrender libXext python3-pip mesa-libGL
  - python3 -m pip install --upgrade pip
  - python3 -m pip install dist/gr-*.tar.gz
  - GKS_WSTYPE=png python3 -c 'import gr; gr.polyline([0, 1], [0, 1]); gr.updatews()'
  - python3 -c 'import gr3'
  artifacts:
    paths:
    - gks.png

install-opensuse42.3-python2:
  stage: install
  image: opensuse/leap:42.3
  variables:
    GIT_STRATEGY: none
  script:
  - zypper install -y libXt6 libXrender1 libXext6 python3-pip Mesa-libGL1
  - python3 -m pip install --upgrade pip
  - python3 -m pip install dist/gr-*.tar.gz
  - GKS_WSTYPE=png python3 -c 'import gr; gr.polyline([0, 1], [0, 1]); gr.updatews()'
  - python3 -c 'import gr3'
  artifacts:
    paths:
    - gks.png

install-opensuse15-python2:
  stage: install
  image: opensuse/leap:15
  variables:
    GIT_STRATEGY: none
  script:
  - zypper install -y libXt6 libXrender1 libXext6 python3-pip Mesa-libGL1
  - python3 -m pip install --upgrade pip
  - python3 -m pip install dist/gr-*.tar.gz
  - GKS_WSTYPE=png python3 -c 'import gr; gr.polyline([0, 1], [0, 1]); gr.updatews()'
  - python3 -c 'import gr3'
  artifacts:
    paths:
    - gks.png
    
deploy:
  stage: deploy
  image: ubuntu:16.04
  variables:
    GIT_STRATEGY: none
  only:
    - tags@Scientific-IT-Systems/python-gr
  script:
  - apt-get update
  - apt-get install -y virtualenv python-pip git
  - virtualenv env
  - env/bin/pip install --upgrade pip
  - env/bin/pip install twine
  - echo "[distutils]"                                 > ~/.pypirc
  - echo "index-servers ="                            >> ~/.pypirc
  - echo "    pypi"                                   >> ~/.pypirc
  - echo "[pypi]"                                     >> ~/.pypirc
  - echo "username=$PYPIUSERNAME"                     >> ~/.pypirc
  - echo "password=$PYPIPASSWORD"                     >> ~/.pypirc
  - env/bin/twine upload --repository pypi dist/gr-*.tar.gz
